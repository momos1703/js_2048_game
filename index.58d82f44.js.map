{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_define_property.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $cd5a47cf8ef6d766$export$71511d61b312f219(obj, key, value) {\n    if (key in obj) Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n    });\n    else obj[key] = value;\n    return obj;\n}\n\n\nfunction $09cbfe85151ea6c6$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$71511d61b312f219(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $efec029548ccee7f$export$71511d61b312f219(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$71511d61b312f219)(arr) || (0, $8ca2848f896a6803$export$71511d61b312f219)(arr, i) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr, i) || (0, $a0bc1859061deae1$export$71511d61b312f219)();\n}\n\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */ var $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        (0, $cd5a47cf8ef6d766$export$71511d61b312f219)(this, \"initialState\", [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ]);\n        this.currentState = this.initialState.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n        });\n        this.status = Game.Status.idle;\n        this.score = 0;\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.currentState;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                this.updateStatus();\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.status = Game.Status.playing;\n                this.currentState = this.makeDeepCopyState(this.initialState);\n                this.createRandomTile();\n                this.createRandomTile();\n                this.showTiles();\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.clearTheBoard();\n                this.showTiles();\n                this.status = Game.Status.idle;\n                this.score = 0;\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var _this = this, _loop = function(column) {\n                    var columnData = _this.currentState.map(function(row) {\n                        return row[column];\n                    });\n                    var _this_processColumn = _this.processColumn(columnData), newLine = _this_processColumn.newLine, moved = _this_processColumn.moved;\n                    if (moved) didTilesMove = true;\n                    for(var row = 0; row < 4; row++)_this.currentState[row][column] = newLine[row];\n                };\n                if (this.status !== Game.Status.playing) return;\n                var didTilesMove = false;\n                for(var column = 0; column < 4; column++)_loop(column);\n                if (didTilesMove) this.createRandomTile();\n                return didTilesMove;\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var _this = this, _loop = function(column) {\n                    var columnData = _this.currentState.map(function(row) {\n                        return row[column];\n                    });\n                    var reversedColumn = columnData.reverse();\n                    var _this_processColumn = _this.processColumn(reversedColumn), newLine = _this_processColumn.newLine, moved = _this_processColumn.moved;\n                    if (moved) didTilesMove = true;\n                    var correctedColumn = newLine.reverse();\n                    for(var row = 0; row < 4; row++)_this.currentState[row][column] = correctedColumn[row];\n                };\n                if (this.status !== Game.Status.playing) return;\n                var didTilesMove = false;\n                for(var column = 0; column < 4; column++)_loop(column);\n                if (didTilesMove) this.createRandomTile();\n                return didTilesMove;\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                if (this.status !== Game.Status.playing) return;\n                var didTilesMove = false;\n                for(var row = 0; row < 4; row++){\n                    var rowData = this.currentState[row];\n                    var _this_processColumn = this.processColumn(rowData), newLine = _this_processColumn.newLine, moved = _this_processColumn.moved;\n                    if (moved) didTilesMove = true;\n                    this.currentState[row] = newLine;\n                }\n                if (didTilesMove) this.createRandomTile();\n                return didTilesMove;\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                if (this.status !== Game.Status.playing) return;\n                var didTilesMove = false;\n                for(var row = 0; row < 4; row++){\n                    var rowData = this.currentState[row];\n                    var reversedRow = rowData.reverse();\n                    var _this_processColumn = this.processColumn(reversedRow), newLine = _this_processColumn.newLine, moved = _this_processColumn.moved;\n                    if (moved) didTilesMove = true;\n                    var correctedRow = newLine.reverse();\n                    this.currentState[row] = correctedRow;\n                }\n                if (didTilesMove) this.createRandomTile();\n                return didTilesMove;\n            }\n        },\n        {\n            key: \"processColumn\",\n            value: function processColumn(line) {\n                var newLine = [\n                    0,\n                    0,\n                    0,\n                    0\n                ];\n                var mergeOccurred = false;\n                var position = 0;\n                var scoreIncrease = 0;\n                for(var i = 0; i < line.length; i++){\n                    if (line[i] === 0) continue;\n                    if (!mergeOccurred && position > 0 && newLine[position - 1] === line[i]) {\n                        newLine[position - 1] *= 2;\n                        scoreIncrease += newLine[position - 1];\n                        mergeOccurred = true;\n                    } else {\n                        newLine[position] = line[i];\n                        position++;\n                        mergeOccurred = false;\n                    }\n                }\n                var moved = !this.areLinesEqual(line, newLine);\n                this.score += scoreIncrease;\n                return {\n                    newLine: newLine,\n                    moved: moved\n                };\n            }\n        },\n        {\n            key: \"getColumn\",\n            value: function getColumn(index) {\n                return this.currentState.map(function(row) {\n                    return row[index];\n                });\n            }\n        },\n        {\n            key: \"setColumn\",\n            value: function setColumn(index, column) {\n                for(var row = 0; row < 4; row++)this.currentState[row][index] = column[row];\n            }\n        },\n        {\n            key: \"areLinesEqual\",\n            value: function areLinesEqual(line1, line2) {\n                return line1.every(function(value, index) {\n                    return value === line2[index];\n                });\n            }\n        },\n        {\n            key: \"makeDeepCopyState\",\n            value: function makeDeepCopyState(stateForCopy) {\n                return stateForCopy.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n            }\n        },\n        {\n            key: \"createRandomTile\",\n            value: function createRandomTile() {\n                var randomTile = this.randomNumber();\n                if (!randomTile) return;\n                var _randomTile = (0, $efec029548ccee7f$export$71511d61b312f219)(randomTile, 2), row = _randomTile[0], column = _randomTile[1];\n                this.currentState[row][column] = this.generateTileValue();\n                this.showTiles();\n            }\n        },\n        {\n            key: \"randomNumber\",\n            value: function randomNumber() {\n                var randomRange = this.getRequiredTiles(0);\n                if (randomRange.length === 0) return null;\n                var randomNumber = Math.floor(Math.random() * randomRange.length);\n                return randomRange[randomNumber];\n            }\n        },\n        {\n            key: \"getRequiredTiles\",\n            value: function getRequiredTiles(requiredValue) {\n                var requiredTiles = [];\n                for(var row = 0; row < this.currentState.length; row++){\n                    for(var cell = 0; cell < this.currentState[row].length; cell++)if (this.currentState[row][cell] === requiredValue) requiredTiles.push([\n                        row,\n                        cell\n                    ]);\n                }\n                return requiredTiles;\n            }\n        },\n        {\n            key: \"generateTileValue\",\n            value: function generateTileValue() {\n                var randomValue = Math.random();\n                return randomValue > 0.9 ? 4 : 2;\n            }\n        },\n        {\n            key: \"updateStatus\",\n            value: function updateStatus() {\n                if (this.didPlayerWin()) this.status = Game.Status.win;\n                else if (this.didPlayerLose()) this.status = Game.Status.lose;\n            }\n        },\n        {\n            key: \"didPlayerWin\",\n            value: function didPlayerWin() {\n                return this.getRequiredTiles(2048).length > 0;\n            }\n        },\n        {\n            key: \"didPlayerLose\",\n            value: function didPlayerLose() {\n                if (this.getRequiredTiles(0).length > 0) return false;\n                if (!this.checkEqualNeighbors()) return false;\n                return true;\n            }\n        },\n        {\n            key: \"checkEqualNeighbors\",\n            value: function checkEqualNeighbors() {\n                for(var row = 0; row < 4; row++)for(var column = 0; column < 4; column++){\n                    if (column < 3 && this.currentState[row][column] === this.currentState[row][column + 1]) return false;\n                    if (row < 3 && this.currentState[row][column] === this.currentState[row + 1][column]) return false;\n                }\n                return true;\n            }\n        },\n        {\n            key: \"showTiles\",\n            value: function showTiles() {\n                var tiles = document.getElementsByClassName(\"field-cell\");\n                var fieldCounter = 0;\n                for(var row = 0; row < 4; row++)for(var column = 0; column < 4; column++){\n                    var tileValue = this.currentState[row][column];\n                    if (tileValue === 0) {\n                        tiles[fieldCounter].innerText = \"\";\n                        tiles[fieldCounter].className = \"field-cell\";\n                    } else {\n                        tiles[fieldCounter].innerText = tileValue;\n                        tiles[fieldCounter].className = \"field-cell field-cell--\".concat(tileValue);\n                    }\n                    fieldCounter++;\n                }\n            }\n        },\n        {\n            key: \"clearTheBoard\",\n            value: function clearTheBoard() {\n                this.currentState = this.makeDeepCopyState(this.initialState);\n            }\n        }\n    ]);\n    return Game;\n}();\n(0, $cd5a47cf8ef6d766$export$71511d61b312f219)($3d28d7f1aac198f5$var$Game, \"Status\", {\n    idle: \"idle\",\n    playing: \"playing\",\n    win: \"win\",\n    lose: \"lose\"\n});\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$startBtn = document.querySelector(\".start\");\nvar $197cd56b15c33885$var$score = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$startMessage = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$winMessage = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$loseMessage = document.querySelector(\".message-lose\");\n$197cd56b15c33885$var$initialize();\nfunction $197cd56b15c33885$var$initialize() {\n    $197cd56b15c33885$var$startBtn.addEventListener(\"click\", $197cd56b15c33885$var$handleStartClick);\n    document.addEventListener(\"keydown\", $197cd56b15c33885$var$handleKeyboardActions);\n}\nfunction $197cd56b15c33885$var$handleStartClick() {\n    if ($197cd56b15c33885$var$startBtn.classList.contains(\"start\")) {\n        $197cd56b15c33885$var$startBtn.className = \"button restart\";\n        $197cd56b15c33885$var$startBtn.textContent = \"Restart\";\n        $197cd56b15c33885$var$startMessage.classList.add(\"hidden\");\n        $197cd56b15c33885$var$game.start();\n    } else {\n        $197cd56b15c33885$var$startBtn.className = \"button start\";\n        $197cd56b15c33885$var$startBtn.textContent = \"Start\";\n        $197cd56b15c33885$var$startMessage.classList.remove(\"hidden\");\n        $197cd56b15c33885$var$winMessage.classList.add(\"hidden\");\n        $197cd56b15c33885$var$loseMessage.classList.add(\"hidden\");\n        $197cd56b15c33885$var$score.textContent = \"0\";\n        $197cd56b15c33885$var$game.restart();\n    }\n}\nfunction $197cd56b15c33885$var$handleKeyboardActions(keyEvent) {\n    keyEvent.preventDefault();\n    var didTilesMoved = false;\n    switch(keyEvent.key){\n        case \"ArrowUp\":\n            didTilesMoved = $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            didTilesMoved = $197cd56b15c33885$var$game.moveDown();\n            break;\n        case \"ArrowRight\":\n            didTilesMoved = $197cd56b15c33885$var$game.moveRight();\n            break;\n        case \"ArrowLeft\":\n            didTilesMoved = $197cd56b15c33885$var$game.moveLeft();\n            break;\n        default:\n            break;\n    }\n    $197cd56b15c33885$var$handleNumbersMove(didTilesMoved);\n}\nfunction $197cd56b15c33885$var$handleNumbersMove(numbersMove) {\n    if (numbersMove) {\n        $197cd56b15c33885$var$updateScore($197cd56b15c33885$var$game.getScore());\n        $197cd56b15c33885$var$updateStatusMessage($197cd56b15c33885$var$game.getStatus());\n    }\n}\nfunction $197cd56b15c33885$var$updateScore(newScore) {\n    $197cd56b15c33885$var$score.textContent = newScore;\n}\nfunction $197cd56b15c33885$var$updateStatusMessage(newStatus) {\n    if (newStatus === $3d28d7f1aac198f5$exports.Status.win) $197cd56b15c33885$var$winMessage.classList.remove(\"hidden\");\n    else if (newStatus === $3d28d7f1aac198f5$exports.Status.lose) $197cd56b15c33885$var$loseMessage.classList.remove(\"hidden\");\n}\n\n})();\n//# sourceMappingURL=index.58d82f44.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst startBtn = document.querySelector('.start');\nconst score = document.querySelector('.game-score');\nconst startMessage = document.querySelector('.message-start');\nconst winMessage = document.querySelector('.message-win');\nconst loseMessage = document.querySelector('.message-lose');\n\ninitialize();\n\nfunction initialize() {\n  startBtn.addEventListener('click', handleStartClick);\n  document.addEventListener('keydown', handleKeyboardActions);\n}\n\nfunction handleStartClick() {\n  if (startBtn.classList.contains('start')) {\n    startBtn.className = 'button restart';\n    startBtn.textContent = 'Restart';\n    startMessage.classList.add('hidden');\n    game.start();\n  } else {\n    startBtn.className = 'button start';\n    startBtn.textContent = 'Start';\n    startMessage.classList.remove('hidden');\n    winMessage.classList.add('hidden');\n    loseMessage.classList.add('hidden');\n    score.textContent = '0';\n\n    game.restart();\n  }\n}\n\nfunction handleKeyboardActions(keyEvent) {\n  keyEvent.preventDefault();\n\n  let didTilesMoved = false;\n\n  switch (keyEvent.key) {\n    case 'ArrowUp':\n      didTilesMoved = game.moveUp();\n      break;\n    case 'ArrowDown':\n      didTilesMoved = game.moveDown();\n      break;\n    case 'ArrowRight':\n      didTilesMoved = game.moveRight();\n      break;\n    case 'ArrowLeft':\n      didTilesMoved = game.moveLeft();\n      break;\n    default:\n      break;\n  }\n\n  handleNumbersMove(didTilesMoved);\n}\n\nfunction handleNumbersMove(numbersMove) {\n  if (numbersMove) {\n    updateScore(game.getScore());\n    updateStatusMessage(game.getStatus());\n  }\n}\n\nfunction updateScore(newScore) {\n  score.textContent = newScore;\n}\n\nfunction updateStatusMessage(newStatus) {\n  if (newStatus === Game.Status.win) {\n    winMessage.classList.remove('hidden');\n  } else if (newStatus === Game.Status.lose) {\n    loseMessage.classList.remove('hidden');\n  }\n}\n","'use strict';\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\n\nclass Game {\n  static Status = {\n    idle: 'idle',\n    playing: 'playing',\n    win: 'win',\n    lose: 'lose',\n  };\n\n  initialState = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  constructor() {\n    this.currentState = this.initialState.map((row) => [...row]);\n    this.status = Game.Status.idle;\n    this.score = 0;\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.currentState;\n  }\n\n  getStatus() {\n    this.updateStatus();\n\n    return this.status;\n  }\n\n  start() {\n    this.status = Game.Status.playing;\n    this.currentState = this.makeDeepCopyState(this.initialState);\n    this.createRandomTile();\n    this.createRandomTile();\n    this.showTiles();\n  }\n\n  restart() {\n    this.clearTheBoard();\n    this.showTiles();\n    this.status = Game.Status.idle;\n    this.score = 0;\n  }\n\n  moveUp() {\n    if (this.status !== Game.Status.playing) {\n      return;\n    }\n\n    let didTilesMove = false;\n\n    for (let column = 0; column < 4; column++) {\n      const columnData = this.currentState.map((row) => row[column]);\n      const { newLine, moved } = this.processColumn(columnData);\n\n      if (moved) {\n        didTilesMove = true;\n      }\n\n      for (let row = 0; row < 4; row++) {\n        this.currentState[row][column] = newLine[row];\n      }\n    }\n\n    if (didTilesMove) {\n      this.createRandomTile();\n    }\n\n    return didTilesMove;\n  }\n\n  moveDown() {\n    if (this.status !== Game.Status.playing) {\n      return;\n    }\n\n    let didTilesMove = false;\n\n    for (let column = 0; column < 4; column++) {\n      const columnData = this.currentState.map((row) => row[column]);\n      const reversedColumn = columnData.reverse();\n      const { newLine, moved } = this.processColumn(reversedColumn);\n\n      if (moved) {\n        didTilesMove = true;\n      }\n\n      const correctedColumn = newLine.reverse();\n\n      for (let row = 0; row < 4; row++) {\n        this.currentState[row][column] = correctedColumn[row];\n      }\n    }\n\n    if (didTilesMove) {\n      this.createRandomTile();\n    }\n\n    return didTilesMove;\n  }\n\n  moveLeft() {\n    if (this.status !== Game.Status.playing) {\n      return;\n    }\n\n    let didTilesMove = false;\n\n    for (let row = 0; row < 4; row++) {\n      const rowData = this.currentState[row];\n      const { newLine, moved } = this.processColumn(rowData);\n\n      if (moved) {\n        didTilesMove = true;\n      }\n\n      this.currentState[row] = newLine;\n    }\n\n    if (didTilesMove) {\n      this.createRandomTile();\n    }\n\n    return didTilesMove;\n  }\n\n  moveRight() {\n    if (this.status !== Game.Status.playing) {\n      return;\n    }\n\n    let didTilesMove = false;\n\n    for (let row = 0; row < 4; row++) {\n      const rowData = this.currentState[row];\n      const reversedRow = rowData.reverse();\n      const { newLine, moved } = this.processColumn(reversedRow);\n\n      if (moved) {\n        didTilesMove = true;\n      }\n\n      const correctedRow = newLine.reverse();\n\n      this.currentState[row] = correctedRow;\n    }\n\n    if (didTilesMove) {\n      this.createRandomTile();\n    }\n\n    return didTilesMove;\n  }\n\n  processColumn(line) {\n    const newLine = [0, 0, 0, 0];\n    let mergeOccurred = false;\n    let position = 0;\n    let scoreIncrease = 0;\n\n    for (let i = 0; i < line.length; i++) {\n      if (line[i] === 0) {\n        continue;\n      }\n\n      if (!mergeOccurred && position > 0 && newLine[position - 1] === line[i]) {\n        newLine[position - 1] *= 2;\n        scoreIncrease += newLine[position - 1];\n        mergeOccurred = true;\n      } else {\n        newLine[position] = line[i];\n        position++;\n        mergeOccurred = false;\n      }\n    }\n\n    const moved = !this.areLinesEqual(line, newLine);\n\n    this.score += scoreIncrease;\n\n    return { newLine, moved };\n  }\n\n  getColumn(index) {\n    return this.currentState.map((row) => row[index]);\n  }\n\n  setColumn(index, column) {\n    for (let row = 0; row < 4; row++) {\n      this.currentState[row][index] = column[row];\n    }\n  }\n\n  areLinesEqual(line1, line2) {\n    return line1.every((value, index) => value === line2[index]);\n  }\n\n  makeDeepCopyState(stateForCopy) {\n    return stateForCopy.map((row) => [...row]);\n  }\n\n  createRandomTile() {\n    const randomTile = this.randomNumber();\n\n    if (!randomTile) {\n      return;\n    }\n\n    const [row, column] = randomTile;\n\n    this.currentState[row][column] = this.generateTileValue();\n    this.showTiles();\n  }\n\n  randomNumber() {\n    const randomRange = this.getRequiredTiles(0);\n\n    if (randomRange.length === 0) {\n      return null;\n    }\n\n    const randomNumber = Math.floor(Math.random() * randomRange.length);\n\n    return randomRange[randomNumber];\n  }\n\n  getRequiredTiles(requiredValue) {\n    const requiredTiles = [];\n\n    for (let row = 0; row < this.currentState.length; row++) {\n      for (let cell = 0; cell < this.currentState[row].length; cell++) {\n        if (this.currentState[row][cell] === requiredValue) {\n          requiredTiles.push([row, cell]);\n        }\n      }\n    }\n\n    return requiredTiles;\n  }\n\n  generateTileValue() {\n    const randomValue = Math.random();\n\n    return randomValue > 0.9 ? 4 : 2;\n  }\n\n  updateStatus() {\n    if (this.didPlayerWin()) {\n      this.status = Game.Status.win;\n    } else if (this.didPlayerLose()) {\n      this.status = Game.Status.lose;\n    }\n  }\n\n  didPlayerWin() {\n    return this.getRequiredTiles(2048).length > 0;\n  }\n\n  didPlayerLose() {\n    if (this.getRequiredTiles(0).length > 0) {\n      return false;\n    }\n\n    if (!this.checkEqualNeighbors()) {\n      return false;\n    }\n\n    return true;\n  }\n\n  checkEqualNeighbors() {\n    for (let row = 0; row < 4; row++) {\n      for (let column = 0; column < 4; column++) {\n        if (\n          column < 3 &&\n          this.currentState[row][column] === this.currentState[row][column + 1]\n        ) {\n          return false;\n        }\n\n        if (\n          row < 3 &&\n          this.currentState[row][column] === this.currentState[row + 1][column]\n        ) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  showTiles() {\n    const tiles = document.getElementsByClassName('field-cell');\n\n    let fieldCounter = 0;\n\n    for (let row = 0; row < 4; row++) {\n      for (let column = 0; column < 4; column++) {\n        const tileValue = this.currentState[row][column];\n\n        if (tileValue === 0) {\n          tiles[fieldCounter].innerText = '';\n          tiles[fieldCounter].className = `field-cell`;\n        } else {\n          tiles[fieldCounter].innerText = tileValue;\n          tiles[fieldCounter].className = `field-cell field-cell--${tileValue}`;\n        }\n\n        fieldCounter++;\n      }\n    }\n  }\n\n  clearTheBoard() {\n    this.currentState = this.makeDeepCopyState(this.initialState);\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n","import { _ as _array_with_holes } from \"./_array_with_holes.js\";\nimport { _ as _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _ as _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n"],"names":["$3d28d7f1aac198f5$exports","$cd5a47cf8ef6d766$export$71511d61b312f219","obj","key","value","Object","defineProperty","enumerable","configurable","writable","$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$d4f69c5c6c4654b1$export$71511d61b312f219","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","TypeError","$3d28d7f1aac198f5$var$Game","protoProps","Game","instance","Constructor","currentState","initialState","map","row","status","Status","idle","score","updateStatus","playing","makeDeepCopyState","createRandomTile","showTiles","clearTheBoard","_this","_loop","column","columnData","_this_processColumn","processColumn","newLine","moved","didTilesMove","reversedColumn","reverse","correctedColumn","rowData","reversedRow","correctedRow","line","mergeOccurred","position","scoreIncrease","areLinesEqual","index","line1","line2","every","stateForCopy","randomTile","randomNumber","_randomTile","_s","_e","_i","_arr","_n","_d","next","done","push","err","generateTileValue","randomRange","getRequiredTiles","Math","floor","random","requiredValue","requiredTiles","cell","randomValue","didPlayerWin","win","didPlayerLose","lose","checkEqualNeighbors","tiles","document","getElementsByClassName","fieldCounter","tileValue","innerText","className","concat","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","$197cd56b15c33885$var$game","$197cd56b15c33885$var$startBtn","querySelector","$197cd56b15c33885$var$score","$197cd56b15c33885$var$startMessage","$197cd56b15c33885$var$winMessage","$197cd56b15c33885$var$loseMessage","addEventListener","classList","contains","textContent","add","start","remove","restart","keyEvent","preventDefault","newScore","newStatus","didTilesMoved","moveUp","moveDown","moveRight","moveLeft","getScore","getStatus"],"version":3,"file":"index.58d82f44.js.map"}